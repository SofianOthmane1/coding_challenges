import requests
from bs4 import BeautifulSoup
from collections import defaultdict

def fetch_google_doc(url):
    response = requests.get(url)
    if response.status_code == 200:
        return response.text
    else:
        raise Exception(f"Failed to fetch document: {response.status_code}")

def parse_document(content):
    # Using BeautifulSoup to parse the HTML content
    soup = BeautifulSoup(content, 'html.parser')
    
    # Find all table rows
    rows = soup.find_all('tr')
    if not rows:
        print("No table rows found in the document.")
        return defaultdict(lambda: ' '), 0, 0

    grid_data = defaultdict(lambda: ' ')
    max_x, max_y = 0, 0

    # Iterate through each row to extract data
    for row in rows:
        cells = row.find_all('td')
        if len(cells) >= 3:
            try:
                # Adjusted order to match the table format
                x = int(cells[0].get_text(strip=True))
                char = cells[1].get_text(strip=True)
                y = int(cells[2].get_text(strip=True))
                
                # Fill the grid dictionary with characters from table data
                grid_data[(x, y)] = char
                max_x = max(max_x, x)
                max_y = max(max_y, y)
            except ValueError:
                # Skip rows that do not contain valid numeric data for x or y
                print(f"Skipping invalid row: {[cell.get_text(strip=True) for cell in cells]}")
                continue
    
    return grid_data, max_x, max_y

def print_grid(grid_data, max_x, max_y):
    if max_x == 0 and max_y == 0 and not any(grid_data.values()):
        print("No valid data to print in the grid.")
        return

    for y in range(max_y + 1):
        row = ""
        for x in range(max_x + 1):
            row += grid_data[(x, y)]
        print(row)

def main(url):
    # Step 1: Fetch the document content
    content = fetch_google_doc(url)
    
    # Step 2: Parse the document to extract character and position data
    grid_data, max_x, max_y = parse_document(content)
    
    # Step 3: Print the grid
    print_grid(grid_data, max_x, max_y)

# Example usage
if __name__ == "__main__":
    url = "https://docs.google.com/document/d/e/2PACX-1vQGUck9HIFCyezsrBSnmENk5ieJuYwpt7YHYEzeNJkIb9OSDdx-ov2nRNReKQyey-cwJOoEKUhLmN9z/pub"
    main(url)
